//
// EntityCounts.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public final class BookmarkModel: Codable, JSONEncodable, Hashable {

    public var entityId: String
    public var entityType: BookmarkType

    public init(entityId: String, entityType: BookmarkType) {
        self.entityId = entityId
        self.entityType = entityType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case entityId
        case entityType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(entityId, forKey: .entityId)
        try container.encodeIfPresent(entityType, forKey: .entityType)
    }

    public static func == (lhs: BookmarkModel, rhs: BookmarkModel) -> Bool {
        lhs.entityId == rhs.entityId &&
        lhs.entityType == rhs.entityType
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(entityId.hashValue)
        hasher.combine(entityType.hashValue)
        
    }
}

