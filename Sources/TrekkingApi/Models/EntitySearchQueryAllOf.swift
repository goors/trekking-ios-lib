//
// EntitySearchQueryAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public final class EntitySearchQueryAllOf: Codable, JSONEncodable, Hashable {

    public var createdTime: SearchQueryRangeOfDateTime?
    public var updatedTime: SearchQueryRangeOfDateTime?

    public init(createdTime: SearchQueryRangeOfDateTime? = nil, updatedTime: SearchQueryRangeOfDateTime? = nil) {
        self.createdTime = createdTime
        self.updatedTime = updatedTime
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case createdTime
        case updatedTime
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(createdTime, forKey: .createdTime)
        try container.encodeIfPresent(updatedTime, forKey: .updatedTime)
    }

    public static func == (lhs: EntitySearchQueryAllOf, rhs: EntitySearchQueryAllOf) -> Bool {
        lhs.createdTime == rhs.createdTime &&
        lhs.updatedTime == rhs.updatedTime
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(createdTime?.hashValue)
        hasher.combine(updatedTime?.hashValue)
        
    }
}

