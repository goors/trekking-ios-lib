//
// ActivityRecord.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public final class ActivityRecord: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var lng: Double?
    public var lat: Double?
    public var distance: Double?
    public var speed: Double?
    public var poi: ActivityRecordPoi?
    public var elevation: Double?
    public var dateTime: Date?
    public var duration: Double?

    public init(id: String? = nil, lng: Double? = nil, lat: Double? = nil, distance: Double? = nil, speed: Double? = nil, poi: ActivityRecordPoi? = nil, elevation: Double? = nil, dateTime: Date? = nil, duration: Double? = nil) {
        self.id = id
        self.lng = lng
        self.lat = lat
        self.distance = distance
        self.speed = speed
        self.poi = poi
        self.elevation = elevation
        self.dateTime = dateTime
        self.duration = duration
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case lng
        case lat
        case distance
        case speed
        case poi
        case elevation
        case dateTime
        case duration
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(lng, forKey: .lng)
        try container.encodeIfPresent(lat, forKey: .lat)
        try container.encodeIfPresent(distance, forKey: .distance)
        try container.encodeIfPresent(speed, forKey: .speed)
        try container.encodeIfPresent(poi, forKey: .poi)
        try container.encodeIfPresent(elevation, forKey: .elevation)
        try container.encodeIfPresent(dateTime, forKey: .dateTime)
        try container.encodeIfPresent(duration, forKey: .duration)
    }

    public static func == (lhs: ActivityRecord, rhs: ActivityRecord) -> Bool {
        lhs.id == rhs.id &&
        lhs.lng == rhs.lng &&
        lhs.lat == rhs.lat &&
        lhs.distance == rhs.distance &&
        lhs.speed == rhs.speed &&
        lhs.poi == rhs.poi &&
        lhs.elevation == rhs.elevation &&
        lhs.dateTime == rhs.dateTime &&
        lhs.duration == rhs.duration
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(id?.hashValue)
        hasher.combine(lng?.hashValue)
        hasher.combine(lat?.hashValue)
        hasher.combine(distance?.hashValue)
        hasher.combine(speed?.hashValue)
        hasher.combine(poi?.hashValue)
        hasher.combine(elevation?.hashValue)
        hasher.combine(dateTime?.hashValue)
        hasher.combine(duration?.hashValue)
        
    }
}

