//
// EntityCounts.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public final class EntityCounts: Codable, JSONEncodable, Hashable {

    public var totalCount: Int?
    public var enabledCount: Int?

    public init(totalCount: Int? = nil, enabledCount: Int? = nil) {
        self.totalCount = totalCount
        self.enabledCount = enabledCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case totalCount
        case enabledCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(totalCount, forKey: .totalCount)
        try container.encodeIfPresent(enabledCount, forKey: .enabledCount)
    }

    public static func == (lhs: EntityCounts, rhs: EntityCounts) -> Bool {
        lhs.totalCount == rhs.totalCount &&
        lhs.enabledCount == rhs.enabledCount
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(totalCount?.hashValue)
        hasher.combine(enabledCount?.hashValue)
        
    }
}

