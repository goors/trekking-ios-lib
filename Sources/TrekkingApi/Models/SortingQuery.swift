//
// SortingQuery.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public final class SortingQuery: Codable, JSONEncodable, Hashable {

    static let sortRule = StringRule(minLength: 0, maxLength: 200, pattern: nil)
    public var sort: String?

    public init(sort: String? = nil) {
        self.sort = sort
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sort
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sort, forKey: .sort)
    }

    public static func == (lhs: SortingQuery, rhs: SortingQuery) -> Bool {
        lhs.sort == rhs.sort
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(sort?.hashValue)
        
    }
}

