//
// AdventurePhoto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public final class AdventurePhoto: Codable, JSONEncodable, Hashable {

    static let idRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var id: String
    public var position: Int?

    public init(id: String, position: Int? = nil) {
        self.id = id
        self.position = position
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case position
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(position, forKey: .position)
    }

    public static func == (lhs: AdventurePhoto, rhs: AdventurePhoto) -> Bool {
        lhs.id == rhs.id &&
        lhs.position == rhs.position
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(id.hashValue)
        hasher.combine(position?.hashValue)
        
    }
}

